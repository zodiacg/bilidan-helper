#!/usr/bin/env python3

import struct
import sys
import os
import json
import subprocess

if sys.platform == "win32":
  import msvcrt
  msvcrt.setmode(sys.stdin.fileno(), os.O_BINARY)
  msvcrt.setmode(sys.stdout.fileno(), os.O_BINARY)

def send_message(command,msg):
  message = {'command':command,'msg':msg}
  json_msg = json.dumps(message)
  sys.stdout.buffer.write(struct.pack('I', len(json_msg)))
  sys.stdout.write(json_msg)
  sys.stdout.flush()

def message_handler(message):
  dict_msg = json.loads(message)
  if dict_msg['command'] == 'open':
    invoke_bilidan(dict_msg['msg'])
  elif dict_msg['command'] == 'ping':
    send_message('pong','')
  else:
    send_message('echo','nani')

def invoke_bilidan(param):
  if sys.platform == "win32":
    command_line = ['bilidan']
  else:
    command_line = ['python3','scripts/bilidan.py']
  if param['use_cookie'] == True:
    command_line += ['-c', param['cookie']]
  if param['source'] != 'default':
    command_line += ['-s', param['source']]
  if param['d2aflags'] != '':
    command_line += ['--d2aflags', param['d2aflags']]
  if param['mpvflags'] != '':
    command_line += ['--mpvflags', param['mpvflags']]
  if param['quality'] != 0:
    command_line += ['-q', param['quality']]
  command_line.append(param['url'])
  subprocess.Popen(command_line)
  send_message('succ',json.dumps(param))

def read_msg():
  # Read the message length (first 4 bytes).
  text_length_bytes = sys.stdin.buffer.read(4)
  if len(text_length_bytes) == 0:
    sys.exit(0)
  # Unpack message length as 4 byte integer.
  text_length = struct.unpack('i', text_length_bytes)[0]
  # Read the text (JSON object) of the message.
  text = sys.stdin.buffer.read(text_length).decode('utf-8')
  message_handler(text);

def Main():
  if getattr(sys, 'frozen', False):
    dir = os.path.split(os.path.realpath(sys.executable))[0]
  else:
    dir = os.path.split(os.path.realpath(__file__))[0]
  os.chdir(dir);
  read_msg();
  sys.exit(0);

if __name__ == '__main__':
  Main()
